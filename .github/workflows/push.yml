name: push
on: [push]
env:
  BUILD_BASE: false
  IMAGE_REPO_TAG_BASE: image-base:latest
  IMAGE_REPO_TAG: image:latest

jobs:
  GHCR:
    runs-on: ubuntu-latest
    outputs:
      GHCR_IMAGE_REPO_TAG_BASE: ${{ steps.format.variables.GHCR_IMAGE_REPO_TAG_BASE }}
      GHCR_IMAGE_REPO_TAG: ${{ steps.format.variables.GHCR_IMAGE_REPO_TAG }}
      PROJECT_NAME: ${{ steps.format.variables.PROJECT_NAME }}
      BUILD_BASE: ${{ steps.format.variables.PROJECT_NAME }}
    steps:
      - name: GHCR Formatting
        id: variables
        run: |
          LOWERCASE_GITHUB_REPO=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          GHCR_IMAGE_REPO_TAG_BASE=${LOWERCASE_GITHUB_REPO}/${{ env.IMAGE_REPO_TAG_BASE }}
          GHCR_IMAGE_REPO_TAG=${LOWERCASE_GITHUB_REPO}/${{ env.IMAGE_REPO_TAG }}
          echo "GHCR_IMAGE_REPO_TAG_BASE=${GHCR_IMAGE_REPO_TAG_BASE}" >> "$GITHUB_OUTPUT"
          echo "GHCR_IMAGE_REPO_TAG=${GHCR_IMAGE_REPO_TAG}" >> "$GITHUB_OUTPUT"
          echo "PROJECT_NAME=${GITHUB_REPOSITORY##*/}" >> "$GITHUB_OUTPUT"
          echo "BUILD_BASE=${{ env.BUILD_BASE }}" >> "$GITHUB_OUTPUT"
  build_base:
    needs: GHCR
    if: github.environment.env.BUILD_BASE == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Encryption
        run: chmod +x ./.github/encryption/install.sh && ./.github/encryption/install.sh
      - name: Generate Encryption
        run: chmod +x ./.github/encryption/generate.sh && ./.github/encryption/generate.sh
      - name: Docker Login
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin
      - name: GHCR Repo Formatting
        id: vars
        run: |
          LOWERCASE_GITHUB_REPO=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          GHCR_IMAGE_REPO_TAG_BASE=${LOWERCASE_GITHUB_REPO}/${{ env.IMAGE_REPO_TAG_BASE }}
          GHCR_IMAGE_REPO_TAG=${LOWERCASE_GITHUB_REPO}/${{ env.IMAGE_REPO_TAG }}
          echo "GHCR_IMAGE_REPO_TAG_BASE=${GHCR_IMAGE_REPO_TAG_BASE}" >> "$GITHUB_ENV"
          echo "GHCR_IMAGE_REPO_TAG=${GHCR_IMAGE_REPO_TAG}" >> "$GITHUB_ENV"
          echo "PROJECT_NAME=${GITHUB_REPOSITORY##*/}" >> "$GITHUB_ENV"
      - name: GHCR Pull
        run: docker pull ghcr.io/${{ env.GHCR_IMAGE_REPO_TAG_BASE }} || true
      - name: Docker Build
        run: bash docker/base/build.sh ghcr.io/${{ env.GHCR_IMAGE_REPO_TAG_BASE }}
      - name: GHCR Push
        run: |
          docker push ghcr.io/${{ env.GHCR_IMAGE_REPO_TAG_BASE }}
  build:
    needs: build_base
    if: always() # Runs even if build_base is skipped
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Encryption
        run: chmod +x ./.github/encryption/install.sh && ./.github/encryption/install.sh
      - name: Generate Encryption
        run: chmod +x ./.github/encryption/generate.sh && ./.github/encryption/generate.sh
      - name: Docker Login
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin
      - name: GHCR Repo Formatting
        id: vars
        run: |
          LOWERCASE_GITHUB_REPO=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          GHCR_IMAGE_REPO_TAG_BASE=${LOWERCASE_GITHUB_REPO}/${{ env.IMAGE_REPO_TAG_BASE }}
          GHCR_IMAGE_REPO_TAG=${LOWERCASE_GITHUB_REPO}/${{ env.IMAGE_REPO_TAG }}
          echo "GHCR_IMAGE_REPO_TAG_BASE=${GHCR_IMAGE_REPO_TAG_BASE}" >> "$GITHUB_ENV"
          echo "GHCR_IMAGE_REPO_TAG=${GHCR_IMAGE_REPO_TAG}" >> "$GITHUB_ENV"
          echo "PROJECT_NAME=${GITHUB_REPOSITORY##*/}" >> "$GITHUB_ENV"
      - name: GHCR Pull
        run: docker pull ghcr.io/${{ env.GHCR_IMAGE_REPO_TAG }} || true
      - name: Docker Build
        run: bash docker/dev/build.sh ghcr.io/${{ env.GHCR_IMAGE_REPO_TAG_BASE }} ghcr.io/${{ env.GHCR_IMAGE_REPO_TAG }} ${{ env.PROJECT_NAME }} 
      - name: GHCR Push
        run: |
          docker push ghcr.io/${{ env.GHCR_IMAGE_REPO_TAG }}
  tests:
    needs: [GHCR, build]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/${{ needs.GHCR.outputs.GHCR_IMAGE_REPO_TAG }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run Tests
        run: bash tests/example_test.sh 
